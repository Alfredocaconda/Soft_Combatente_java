/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Layout;

import Control.Ccargo;
import Control.Cdepartamento;
import Control.Cendereco;
import Control.Cfuncionario;
import Modelo.MVfuncionario;
import Modelo.Mcargo;
import Modelo.Mdepartamento;
import Modelo.Mendereco;
import Modelo.Mfuncionario;
import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DOMINGOS FERNANDO
 */
public class funcionario extends javax.swing.JFrame {

    /**
     * Creates new form Departamento
     */
    public funcionario() {
        initComponents();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagem/medalha1.png")));
        departamento();
        endereco();
        cargo();
        listar();

        setBackground(new Color(0, 0, 0, 0));
        tbfuncionariio.getTableHeader().setFont(new Font("Yes I Can", Font.BOLD, 13));
        tbfuncionariio.getTableHeader().setForeground(new Color(36, 136, 203));
        tbfuncionariio.getTableHeader().setOpaque(true);
        tbfuncionariio.setRowHeight(25);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbvoltar = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        txtnome = new rojeru_san.RSMTextFull();
        txtusuario = new rojeru_san.RSMTextFull();
        psSenha = new rojeru_san.RSMPassView();
        txtBi = new rojeru_san.RSMTextFull();
        cbEndereco = new javax.swing.JComboBox();
        cbdepartamento = new javax.swing.JComboBox();
        cbGenero = new javax.swing.JComboBox();
        btnsalvar = new rojeru_san.RSButtonRiple();
        cbCargo = new javax.swing.JComboBox();
        txtNascimento = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbfuncionariio = new javax.swing.JTable();
        txtpesquisar = new rojeru_san.RSMTextFull();
        btnimprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/funcionario.png"))); // NOI18N
        jLabel1.setText("Funcionário");

        lbvoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/voltar.png"))); // NOI18N
        lbvoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbvoltarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbvoltar)
                .addGap(270, 270, 270)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbvoltar)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        txtnome.setPlaceholder("Nome");
        txtnome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnomeKeyPressed(evt);
            }
        });

        txtusuario.setPlaceholder("Usuario");
        txtusuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtusuarioKeyPressed(evt);
            }
        });

        psSenha.setPlaceholder("Senha");
        psSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                psSenhaKeyPressed(evt);
            }
        });

        txtBi.setPlaceholder("Numero do BI");
        txtBi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBiKeyPressed(evt);
            }
        });

        cbEndereco.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbEndereco.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleciona o Endereço" }));
        cbEndereco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbEnderecoKeyPressed(evt);
            }
        });

        cbdepartamento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbdepartamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleciona o Departamento" }));
        cbdepartamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbdepartamentoKeyPressed(evt);
            }
        });

        cbGenero.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbGenero.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleciona o Genero", "Masculino", "Femenino" }));
        cbGenero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbGeneroKeyPressed(evt);
            }
        });

        btnsalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/salvar.png"))); // NOI18N
        btnsalvar.setText("Guardar");
        btnsalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsalvarActionPerformed(evt);
            }
        });

        cbCargo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbCargo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleciona o Cargo" }));
        cbCargo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbCargoKeyPressed(evt);
            }
        });

        try {
            txtNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####/##/##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtNascimento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNascimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNascimentoKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Data de Nascimento");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBi, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                            .addComponent(psSenha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtnome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtusuario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbGenero, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addComponent(txtNascimento, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cbEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(cbdepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnsalvar, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                            .addComponent(cbCargo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtusuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(psSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtBi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbdepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(btnsalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("Cadastramento", jPanel3);

        tbfuncionariio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "null", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbfuncionariio.setFocusable(false);
        tbfuncionariio.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tbfuncionariio.setRowHeight(25);
        tbfuncionariio.setSelectionBackground(new java.awt.Color(255, 102, 102));
        tbfuncionariio.setShowVerticalLines(false);
        tbfuncionariio.getTableHeader().setReorderingAllowed(false);
        tbfuncionariio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbfuncionariioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbfuncionariio);

        txtpesquisar.setPlaceholder("Pesquisar");
        txtpesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpesquisarKeyReleased(evt);
            }
        });

        btnimprimir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnimprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/IMPRIMIR.png"))); // NOI18N
        btnimprimir.setText("IMPRIMIR UM ");
        btnimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1014, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnimprimir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtpesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnimprimir))
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Consulta", jPanel2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1029, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
int codigo = 0;
    private void btnsalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsalvarActionPerformed
        if (codigo == 0) {
            guardar();
        } else {
            atualizar();
            btnsalvar.setText("Actualizar");
        }
        listar();
    }//GEN-LAST:event_btnsalvarActionPerformed

    private void lbvoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbvoltarMouseClicked
        new Principal().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lbvoltarMouseClicked

    private void tbfuncionariioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbfuncionariioMouseClicked
        // TODO add your handling code here:
        codigo = (int) tbfuncionariio.getValueAt(tbfuncionariio.getSelectedRow(), 0);
        if (evt.getClickCount() == 2) {
            Object[] recebe = {"Apagar", "Cancelar", "Editar", "Imprimir"};//declaramos uma vetor objecto que vai armazenar os itens selecionado
            int n = (int) JOptionPane.showOptionDialog(this, "O QUE DESEJA?", "AVISO",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, recebe, recebe[1]);
            if (n == 0) {
                eliminar();
                listar();
            } else {
                if (n == 2) {
                    txtnome.setText((String) tbfuncionariio.getValueAt(tbfuncionariio.getSelectedRow(), 1));
                    txtusuario.setText((String) tbfuncionariio.getValueAt(tbfuncionariio.getSelectedRow(), 2));
                    psSenha.setText((String) tbfuncionariio.getValueAt(tbfuncionariio.getSelectedRow(), 3));
                    txtBi.setText((String) tbfuncionariio.getValueAt(tbfuncionariio.getSelectedRow(), 5));
                    txtNascimento.setText((String) tbfuncionariio.getValueAt(tbfuncionariio.getSelectedRow(), 6));
                    btnsalvar.setText("Actualizar");
                }
                if (n == 3) {
                    Cfuncionario f = new Cfuncionario();
                    f.imprimir2(codigo + "");
                }
            }
        }
    }//GEN-LAST:event_tbfuncionariioMouseClicked

    private void txtnomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnomeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            txtusuario.requestFocus();
        }
    }//GEN-LAST:event_txtnomeKeyPressed

    private void txtusuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtusuarioKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            psSenha.requestFocus();
        }
    }//GEN-LAST:event_txtusuarioKeyPressed

    private void psSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_psSenhaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            cbGenero.requestFocus();
        }
    }//GEN-LAST:event_psSenhaKeyPressed

    private void cbGeneroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbGeneroKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            txtBi.requestFocus();
        }
    }//GEN-LAST:event_cbGeneroKeyPressed

    private void txtBiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBiKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            txtNascimento.requestFocus();
        }
    }//GEN-LAST:event_txtBiKeyPressed

    private void txtNascimentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNascimentoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            cbEndereco.requestFocus();
        }
    }//GEN-LAST:event_txtNascimentoKeyPressed

    private void cbEnderecoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbEnderecoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            cbdepartamento.requestFocus();
        }
    }//GEN-LAST:event_cbEnderecoKeyPressed

    private void cbdepartamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbdepartamentoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            cbCargo.requestFocus();
        }
    }//GEN-LAST:event_cbdepartamentoKeyPressed

    private void cbCargoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbCargoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            guardar();
            listar();
        }
    }//GEN-LAST:event_cbCargoKeyPressed

    private void txtpesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpesquisarKeyReleased
        // TODO add your handling code here:
        pesquisar(txtpesquisar.getText());
    }//GEN-LAST:event_txtpesquisarKeyReleased

    private void btnimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimprimirActionPerformed
        // TODO add your handling code here:
        Cfuncionario d = new Cfuncionario();
        d.imprimir();
    }//GEN-LAST:event_btnimprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(funcionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(funcionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(funcionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(funcionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new funcionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnimprimir;
    private rojeru_san.RSButtonRiple btnsalvar;
    private javax.swing.JComboBox cbCargo;
    private javax.swing.JComboBox cbEndereco;
    private javax.swing.JComboBox cbGenero;
    private javax.swing.JComboBox cbdepartamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbvoltar;
    private rojeru_san.RSMPassView psSenha;
    private javax.swing.JTable tbfuncionariio;
    private rojeru_san.RSMTextFull txtBi;
    private javax.swing.JFormattedTextField txtNascimento;
    private rojeru_san.RSMTextFull txtnome;
    private rojeru_san.RSMTextFull txtpesquisar;
    private rojeru_san.RSMTextFull txtusuario;
    // End of variables declaration//GEN-END:variables

    private void guardar() {
        Mfuncionario model = new Mfuncionario();//instanciamos a modal do funcionario
        Cfuncionario c = new Cfuncionario();//instanciamos a control do funcionario
        // declaramos as variaveise com o seu tipo de dado
        String nome = txtnome.getText();
        String sexo = (String) cbGenero.getSelectedItem();
        String bi = txtBi.getText();
        String usuario = txtusuario.getText();
        String senha = psSenha.getText();
        String nascimento = txtNascimento.getText();
        if (!nome.isEmpty() && !sexo.isEmpty() && !bi.isEmpty() && !usuario.isEmpty()
                && !senha.isEmpty() && !nascimento.isEmpty()) {
            model.setNome(nome);
            model.setUsuario(usuario);
            model.setSenha(senha);
            model.setGenero(sexo);
            model.setBi(bi);
            model.setDataNascimento(nascimento);
            model.setData(data());
            model.setCargo((Mcargo) cbCargo.getSelectedItem());
            model.setEndereco((Mendereco) cbEndereco.getSelectedItem());
            model.setDepartamento((Mdepartamento) cbdepartamento.getSelectedItem());
            c.guardar(model);
        } else {
            model.mensagem("PRENCHA OS CAMPOS");
        }
        txtnome.requestFocus();
        txtnome.setText("");
        txtBi.setText("");
        txtusuario.setText("");
        psSenha.setText("");
        txtNascimento.setText("");
        cbGenero.setSelectedIndex(0);
        cbCargo.setSelectedIndex(0);
        cbEndereco.setSelectedIndex(0);
        cbdepartamento.setSelectedIndex(0);
    }

    private void cargo() {
        Ccargo c = new Ccargo();// instanciamos a control de cargo
        for (Mcargo item : c.consulta()) {
            cbCargo.addItem(item);//add na combox os itens cadastrado no formulario categoria
        }
    }

    private void endereco() {
        Cendereco c = new Cendereco();// instanciamos a control
        for (Mendereco item : c.listar()) {
            cbEndereco.addItem(item);//add na combox os itens cadastrado no formulario categoria
        }
    }

    private void departamento() {
        Cdepartamento c = new Cdepartamento();// instanciamos a control
        for (Mdepartamento item : c.listar()) {
            cbdepartamento.addItem(item);//add na combox os itens cadastrado no formulario categoria
        }
    }

    private String data() {
        Date d = new Date();//instanciamos a classe data
        SimpleDateFormat sd = new SimpleDateFormat("yyyy/MM/dd");
        return sd.format(d);
    }

    private void eliminar() {
        Mfuncionario f = new Mfuncionario();
        int valor = (int) tbfuncionariio.getValueAt(tbfuncionariio.getSelectedRow(), 0);
        f.setIdFuncionario(valor);
        Cfuncionario control = new Cfuncionario();
        control.delete(f);
    }

    private void listar() {
        Cfuncionario cf = new Cfuncionario();
        DefaultTableModel dt = (DefaultTableModel) tbfuncionariio.getModel();
        Object[] recebe = {"CODIGO", "NOME", "GENERO", "BI", "DATA DE NASCIMENTO", "DATA DO CADASTRO",
            "USUARIO", "SENHA", "CARGO", "DEPARTAMENTO", "MUNICIPIO", "PROVINCIA"};
        dt.setColumnIdentifiers(recebe);
        dt.setNumRows(0);
        for (MVfuncionario mf : cf.listar()) {
            Object[] dado = {mf.getCodigo(), mf.getNome(), mf.getGenero(), mf.getBi(), mf.getDataNascimento(), mf.getDatacadastro(), mf.getUsuario(), mf.getSenha(), mf.getCargo(), mf.getDepartamento(), mf.getMunicipio(), mf.getProvincia()};
            dt.addRow(dado);
        }
    }

    private void atualizar() {
        Mfuncionario model = new Mfuncionario();
        Cfuncionario c = new Cfuncionario();
        String nome = txtnome.getText();
        String sexo = (String) cbGenero.getSelectedItem();
        String bi = txtBi.getText();
        String usuario = txtusuario.getText();
        String senha = psSenha.getText();
        String nascimento = txtNascimento.getText();
        if (txtnome.getText().equals("") || txtusuario.getText().equals("") || psSenha.equals("")
                || txtBi.getText().equals("") || txtNascimento.getText().equals("")
                || cbCargo.getSelectedIndex() == 0 || cbEndereco.getSelectedIndex() == 0
                || cbdepartamento.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Prencha os espaços");
        } else {
            model.setIdFuncionario(codigo);
            model.setNome(nome);
            model.setUsuario(usuario);
            model.setSenha(senha);
            model.setGenero(sexo);
            model.setBi(bi);
            model.setDataNascimento(nascimento);
            model.setData(data());
            model.setCargo((Mcargo) cbCargo.getSelectedItem());
            model.setEndereco((Mendereco) cbEndereco.getSelectedItem());
            model.setDepartamento((Mdepartamento) cbdepartamento.getSelectedItem());
            c.actualizar(model);
        }
    }

    private void pesquisar(String pesquisar) {
        Cfuncionario cf = new Cfuncionario();
        DefaultTableModel dt = (DefaultTableModel) tbfuncionariio.getModel();
        Object[] recebe = {"CODIGO", "NOME", "GENERO", "BI", "DATA DE NASCIMENTO", "DATA DO CADASTRO",
            "USUARIO", "SENHA", "CARGO", "DEPARTAMENTO", "MUNICIPIO", "PROVINCIA"};
        dt.setColumnIdentifiers(recebe);
        dt.setNumRows(0);
        for (MVfuncionario mf : cf.pesquisar(pesquisar)) {
            Object[] dado = {mf.getCodigo(), mf.getNome(), mf.getGenero(), mf.getBi(), mf.getDataNascimento(), mf.getDatacadastro(), mf.getUsuario(), mf.getSenha(), mf.getCargo(), mf.getDepartamento(), mf.getMunicipio(), mf.getProvincia()};
            dt.addRow(dado);
        }
    }
}
